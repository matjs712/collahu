// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id       String  @id @default(cuid())
  name     String
  email    String
  password String?
  rut      String?
  telefono String
  cargo    String?
  rol      String?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  // habitaciones HabitacionUser[]
  sessions  Session[]
}

model Session {
  id        String   @id @default(cuid())
  createAt  DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  expires   String
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Campamento {
  id           String       @id @default(cuid())
  nombre       String
  descripcion  String?
  direccion    String?
  img          String?
  wings        Wing[]
  sectores     Sector[]
  habitaciones Habitacion[]
  espacios     Espacio[]
}

model Sector {
  id           String     @id @default(cuid())
  campamentoId String
  nombre       String
  wings        Wing[]
  espacio      Espacio[]
  campamento   Campamento @relation(fields: [campamentoId], references: [id], onDelete: Cascade)
}

model Wing {
  id             String       @id @default(cuid())
  campamentoId   String
  sectorId       String
  nombre         String
  piso           String?
  descripcion    String?
  n_habitaciones Int?
  habitaciones   Habitacion[]
  espacio        Espacio[]
  campamento     Campamento   @relation(fields: [campamentoId], references: [id], onDelete: Cascade)
  sector         Sector       @relation(fields: [sectorId], references: [id], onDelete: Cascade)
}

model Habitacion {
  id           String  @id @default(cuid())
  campamentoId String
  wingId       String
  numero       Int?
  descripcion  String?
  n_camas      Int?
  piso         String?
  tipo_cama    String?
  tipo_huesped String?
  tipo_banio   String?
  tipo_cargos  String?
  tipo_turnos  String?

  campamento Campamento @relation(fields: [campamentoId], references: [id], onDelete: Cascade)
  wing       Wing       @relation(fields: [wingId], references: [id], onDelete: Cascade)
  // usuarios   HabitacionUser[]
}

model Espacio {
  id           String  @id @default(cuid())
  campamentoId String
  sectorId     String?
  wingId       String
  nombre       String
  tipo         String?
  piso         String?
  inventario   String?
  descripcion  String?

  campamento Campamento @relation(fields: [campamentoId], references: [id], onDelete: Cascade)
  wing       Wing       @relation(fields: [wingId], references: [id], onDelete: Cascade)
  Sector     Sector?    @relation(fields: [sectorId], references: [id])
}

model Motivos {
  id                 String  @id @default(cuid())
  tipo_requerimiento String
  descripcion        String?
  prioridad          String
}

// model HabitacionUser {
//   id           String     @id @default(cuid())
//   habitacionId String
//   userId       String
//   habitacion   Habitacion @relation(fields: [habitacionId], references: [id])
//   user         User       @relation(fields: [userId], references: [id])

//   @@unique([habitacionId, userId])
// }
